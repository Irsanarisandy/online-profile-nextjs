//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
  form: Scalars['JSON'];
  values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Int'];
};

export type Query = {
  __typename?: 'Query';
  getCollection: Collection;
  getCollections: Array<Collection>;
  node: Node;
  getDocument: DocumentNode;
  getDocumentList: DocumentConnection;
  getDocumentFields: Scalars['JSON'];
  getHomeDocument: HomeDocument;
  getHomeList: HomeConnection;
  getAboutDocument: AboutDocument;
  getAboutList: AboutConnection;
};


export type QueryGetCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};


export type QueryGetHomeDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetHomeListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};


export type QueryGetAboutDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetAboutListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label: Scalars['String'];
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};

export type DocumentNode = HomeDocument | AboutDocument;

export type Home = {
  __typename?: 'Home';
  intro?: Maybe<Array<Maybe<Scalars['String']>>>;
};

export type HomeDocument = Node & Document & {
  __typename?: 'HomeDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Home;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type HomeConnectionEdges = {
  __typename?: 'HomeConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<HomeDocument>;
};

export type HomeConnection = Connection & {
  __typename?: 'HomeConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<HomeConnectionEdges>>>;
};

export type AboutOverallWebSkills = {
  __typename?: 'AboutOverallWebSkills';
  name?: Maybe<Scalars['String']>;
  percentage?: Maybe<Scalars['Int']>;
  color?: Maybe<Scalars['String']>;
};

export type About = {
  __typename?: 'About';
  title?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  overallWebSkills?: Maybe<Array<Maybe<AboutOverallWebSkills>>>;
  frontend?: Maybe<Array<Maybe<Scalars['String']>>>;
  backend?: Maybe<Array<Maybe<Scalars['String']>>>;
  generalCoding?: Maybe<Array<Maybe<Scalars['String']>>>;
  others?: Maybe<Array<Maybe<Scalars['String']>>>;
};

export type AboutDocument = Node & Document & {
  __typename?: 'AboutDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: About;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type AboutConnectionEdges = {
  __typename?: 'AboutConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<AboutDocument>;
};

export type AboutConnection = Connection & {
  __typename?: 'AboutConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Int'];
  edges?: Maybe<Array<Maybe<AboutConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  createDocument: DocumentNode;
  updateHomeDocument: HomeDocument;
  createHomeDocument: HomeDocument;
  updateAboutDocument: AboutDocument;
  createAboutDocument: AboutDocument;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateHomeDocumentArgs = {
  relativePath: Scalars['String'];
  params: HomeMutation;
};


export type MutationCreateHomeDocumentArgs = {
  relativePath: Scalars['String'];
  params: HomeMutation;
};


export type MutationUpdateAboutDocumentArgs = {
  relativePath: Scalars['String'];
  params: AboutMutation;
};


export type MutationCreateAboutDocumentArgs = {
  relativePath: Scalars['String'];
  params: AboutMutation;
};

export type DocumentMutation = {
  home?: InputMaybe<HomeMutation>;
  about?: InputMaybe<AboutMutation>;
};

export type HomeMutation = {
  intro?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type AboutOverallWebSkillsMutation = {
  name?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Int']>;
  color?: InputMaybe<Scalars['String']>;
};

export type AboutMutation = {
  title?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  overallWebSkills?: InputMaybe<Array<InputMaybe<AboutOverallWebSkillsMutation>>>;
  frontend?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  backend?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  generalCoding?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  others?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type HomePartsFragment = { __typename?: 'Home', intro?: Array<string | null | undefined> | null | undefined };

export type AboutPartsFragment = { __typename?: 'About', title?: string | null | undefined, body?: any | null | undefined, frontend?: Array<string | null | undefined> | null | undefined, backend?: Array<string | null | undefined> | null | undefined, generalCoding?: Array<string | null | undefined> | null | undefined, others?: Array<string | null | undefined> | null | undefined, overallWebSkills?: Array<{ __typename: 'AboutOverallWebSkills', name?: string | null | undefined, percentage?: number | null | undefined, color?: string | null | undefined } | null | undefined> | null | undefined };

export type GetHomeDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetHomeDocumentQuery = { __typename?: 'Query', getHomeDocument: { __typename?: 'HomeDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Home', intro?: Array<string | null | undefined> | null | undefined } } };

export type GetHomeListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetHomeListQuery = { __typename?: 'Query', getHomeList: { __typename?: 'HomeConnection', totalCount: number, edges?: Array<{ __typename?: 'HomeConnectionEdges', node?: { __typename?: 'HomeDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Home', intro?: Array<string | null | undefined> | null | undefined } } | null | undefined } | null | undefined> | null | undefined } };

export type GetAboutDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetAboutDocumentQuery = { __typename?: 'Query', getAboutDocument: { __typename?: 'AboutDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'About', title?: string | null | undefined, body?: any | null | undefined, frontend?: Array<string | null | undefined> | null | undefined, backend?: Array<string | null | undefined> | null | undefined, generalCoding?: Array<string | null | undefined> | null | undefined, others?: Array<string | null | undefined> | null | undefined, overallWebSkills?: Array<{ __typename: 'AboutOverallWebSkills', name?: string | null | undefined, percentage?: number | null | undefined, color?: string | null | undefined } | null | undefined> | null | undefined } } };

export type GetAboutListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAboutListQuery = { __typename?: 'Query', getAboutList: { __typename?: 'AboutConnection', totalCount: number, edges?: Array<{ __typename?: 'AboutConnectionEdges', node?: { __typename?: 'AboutDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'About', title?: string | null | undefined, body?: any | null | undefined, frontend?: Array<string | null | undefined> | null | undefined, backend?: Array<string | null | undefined> | null | undefined, generalCoding?: Array<string | null | undefined> | null | undefined, others?: Array<string | null | undefined> | null | undefined, overallWebSkills?: Array<{ __typename: 'AboutOverallWebSkills', name?: string | null | undefined, percentage?: number | null | undefined, color?: string | null | undefined } | null | undefined> | null | undefined } } | null | undefined } | null | undefined> | null | undefined } };

export const HomePartsFragmentDoc = gql`
    fragment HomeParts on Home {
  intro
}
    `;
export const AboutPartsFragmentDoc = gql`
    fragment AboutParts on About {
  title
  body
  overallWebSkills {
    __typename
    name
    percentage
    color
  }
  frontend
  backend
  generalCoding
  others
}
    `;
export const GetHomeDocumentDocument = gql`
    query getHomeDocument($relativePath: String!) {
  getHomeDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...HomeParts
    }
  }
}
    ${HomePartsFragmentDoc}`;
export const GetHomeListDocument = gql`
    query getHomeList {
  getHomeList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...HomeParts
        }
      }
    }
  }
}
    ${HomePartsFragmentDoc}`;
export const GetAboutDocumentDocument = gql`
    query getAboutDocument($relativePath: String!) {
  getAboutDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...AboutParts
    }
  }
}
    ${AboutPartsFragmentDoc}`;
export const GetAboutListDocument = gql`
    query getAboutList {
  getAboutList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...AboutParts
        }
      }
    }
  }
}
    ${AboutPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      getHomeDocument(variables: GetHomeDocumentQueryVariables, options?: C): Promise<{data: GetHomeDocumentQuery, variables: GetHomeDocumentQueryVariables, query: string}> {
        return requester<{data: GetHomeDocumentQuery, variables: GetHomeDocumentQueryVariables, query: string}, GetHomeDocumentQueryVariables>(GetHomeDocumentDocument, variables, options);
      },
    getHomeList(variables?: GetHomeListQueryVariables, options?: C): Promise<{data: GetHomeListQuery, variables: GetHomeListQueryVariables, query: string}> {
        return requester<{data: GetHomeListQuery, variables: GetHomeListQueryVariables, query: string}, GetHomeListQueryVariables>(GetHomeListDocument, variables, options);
      },
    getAboutDocument(variables: GetAboutDocumentQueryVariables, options?: C): Promise<{data: GetAboutDocumentQuery, variables: GetAboutDocumentQueryVariables, query: string}> {
        return requester<{data: GetAboutDocumentQuery, variables: GetAboutDocumentQueryVariables, query: string}, GetAboutDocumentQueryVariables>(GetAboutDocumentDocument, variables, options);
      },
    getAboutList(variables?: GetAboutListQueryVariables, options?: C): Promise<{data: GetAboutListQuery, variables: GetAboutListQueryVariables, query: string}> {
        return requester<{data: GetAboutListQuery, variables: GetAboutListQueryVariables, query: string}, GetAboutListQueryVariables>(GetAboutListDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { getStaticPropsForTina } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (
  doc,
  vars,
  _options
) => {
  // const data = await tinaClient.request(doc, { variables: vars }); 
  const res = await await getStaticPropsForTina({query: doc, variables: vars})
  return res
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = ()=>getSdk(requester)

